---
- name: Install NGINX
  hosts: lighthouse
  handlers:
    - name: start-nginx
      become: true
      command: nginx
    - name: reload-nginx
      become: true
      command: nginx -s reload
  tasks: 
    - name: Install epel-release
      become: true
      ansible.builtin.yum:
        name: epel-release.noarch
        state: latest
    - name: Install NGINX
      become: true
      ansible.builtin.yum:
        name: nginx
        state: present
      notify: start-nginx
    - name: Create general config NGINX
      become: true
      template:
        src: "template/nging.conf.j2"
        dest: "/etc/nginx/nginx.conf"
        mode: 0755
      notify: reload-nginx
      tags: install nginx
- name: Install lighthouse
  handlers:
  - name: start-nginx
    become: true
    command: nginx
  - name: reload-nginx
    become: true
    command: nginx -s reload
  hosts: lighthouse
  pre_tasks:
    - name: Install dependencies lighthouse
      become: true
      ansible.builtin.yum:
        name: git
        state: present
  tasks:
    - name: Copy from git lighthouse
      git:
        repo: "{{ lighthouse_vcs }}"
        version: master
        dest: "{{ lighthouse_location_dir }}"
    - name: Create lighthouse config
      become: true
      template:
        src: "template/lighthouse.conf.j2"
        dest: "/etc/nginx/conf.d/default.conf"
        mode: 0644
      notify: reload-nginx
      tags: install lighthouse
- name: Install Vector
  hosts: vector
  tasks:
    - name: Download distrib vector
      get_url:
        url: "https://packages.timber.io/vector/0.23.0/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz"
        dest: "files/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz"
        mode: 0755
        timeout: 60
      run_once: True
      delegate_to: localhost
      register: get_vector
      until: get_vector is succeeded
    - name: Create directrory for vector
      file:
        state: directory
        path: "{{ vector_home }}"
      tags: vector_dir  
    - name: Unarchive on managed
      unarchive:
          src: "files/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz"
          dest: "{{ vector_home }}"
          extra_opts: [--strip-components=1]
          creates: "{{ vector_home }}/bin/vector"
      tags: vector
    - name: Template it
      template:
        src: "template/vector.cfg.j2"
        dest: "{{ vector_home }}"
        backup: True
      register: template_result
      tags: vector_template
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: 0755

          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: 0755
          check_mode: false
    - name: Install clickhouse packages
      become: True
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0
